{"version":3,"sources":["components/FormTask.js","components/Search.js","components/Sort.js","components/Control.js","components/ListItem.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["FormTask","props","onCloseForm","onHandleChange","event","target","name","value","setState","onHandleSubmit","preventDefault","onCancel","onSubmit","state","status","id","this","taskEdit","nextProps","className","onClick","type","placeholder","onChange","Component","Search","onSearch","keyword","onResetSearch","onKeyDown","e","keyCode","Sort","onClickSort","sortBy","sortValue","a","sort","by","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Control","ListItem","onDelete","taskItem","onUpdateStatus","onEdit","index","List","onFilter","filterName","filterStatus","elements","tasks","map","key","App","onDisplayForm","isDisplayForm","data","findIndex","task","uuidv4","push","localStorage","setItem","JSON","stringify","splice","onShowEdit","filter","getItem","parse","toLowerCase","includes","b","elementFormTask","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6b555609.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass FormTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      status: true,\r\n    };\r\n  }\r\n\r\n  // Edit load lifecycle, call once\r\n  componentDidMount() {\r\n    if (this.props.taskEdit) {\r\n      this.setState({\r\n        id: this.props.taskEdit.id,\r\n        name: this.props.taskEdit.name,\r\n        status: this.props.taskEdit.status,\r\n      });\r\n    }\r\n  }\r\n  // component đang mở, xử lý thêm và edit\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps && nextProps.taskEdit !== null) {\r\n      this.setState({\r\n        id: nextProps.taskEdit.id,\r\n        name: nextProps.taskEdit.name,\r\n        status: nextProps.taskEdit.status,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        id: \"\",\r\n        name: \"\",\r\n        status: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  onCloseForm = () => {\r\n    this.props.onCloseForm();\r\n  };\r\n\r\n  onHandleChange = (event) => {\r\n    let target = event.target;\r\n    let name = target.name;\r\n    let value = target.value;\r\n    if (name === \"status\") {\r\n      value = target.value === \"true\" ? true : false;\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.onCancel();\r\n    this.onCloseForm();\r\n    return this.props.onSubmit(this.state);\r\n  };\r\n\r\n  onCancel = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      status: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { id } = this.state;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h4>\r\n            {id !== \"\" ? \"Edit Task\" : \"Add Task\"}\r\n            <span onClick={this.onCloseForm}>\r\n              <i className=\"fas fa-times-circle\"></i>\r\n            </span>\r\n          </h4>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onHandleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                placeholder=\"do something ...\"\r\n                value={this.state.name}\r\n                onChange={this.onHandleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Status:</label>\r\n              <select\r\n                name=\"status\"\r\n                className=\"form-control\"\r\n                value={this.state.status}\r\n                onChange={this.onHandleChange}\r\n              >\r\n                <option value={true}>Active</option>\r\n                <option value={false}>Hide</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <button type=\"submit\" className=\"btn btn-warning\">\r\n                <i className=\"fas fa-plus\"></i>&nbsp;Save\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                onClick={this.onCancel}\r\n              >\r\n                <i className=\"fas fa-times\"></i>&nbsp;Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FormTask;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      keyword: \"\",\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    let target = event.target;\r\n    let name = target.name;\r\n    let value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  onSearch = () => {\r\n    this.props.onSearch(this.state.keyword);\r\n  };\r\n\r\n  onResetSearch = () => {\r\n    this.setState({\r\n      keyword: \"\",\r\n    });\r\n    this.props.onResetSearch(this.setState.keyword);\r\n  };\r\n\r\n  onKeyDown = (e) => {\r\n    if (e.keyCode === 13) {\r\n      this.setState ({\r\n        keyword: e.target.value\r\n      })\r\n      this.props.onSearch(this.state.keyword);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-sm-6 col-md-6\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            className=\"form-control py-2 border-right-0 border\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            name=\"keyword\"\r\n            value={this.state.keyword}\r\n            onChange={this.onChange}\r\n            onKeyDown={this.onKeyDown}\r\n          />\r\n\r\n          {this.state.keyword !== \"\" ? (\r\n            <div className=\"input-group-btn border border-right-0 border-left-0\">\r\n              <span className=\"btn\" onClick={this.onResetSearch}>\r\n                <i className=\"far fa-times-circle\"></i>\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <span className=\"input-group-btn\">\r\n            <button\r\n              className=\"btn btn-outline-secondary border-left-0 border\"\r\n              type=\"button\"\r\n              onClick={this.onSearch}\r\n            >\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Sort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sort: {\r\n        by: \"\", // name, value\r\n        value: 1, // asc, desc\r\n      },\r\n    };\r\n  }\r\n\r\n  onClickSort = async (sortBy, sortValue) => {\r\n    await this.setState({\r\n      sort: {\r\n        by: sortBy,\r\n        value: sortValue,\r\n      },\r\n    });\r\n    this.props.onSort(this.state.sort);\r\n  };\r\n\r\n  render() {\r\n    let { sort } = this.state;\r\n    return (\r\n      <div className=\"col-sm-6 col-md-6\">\r\n        <div className=\"dropdown\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            id=\"triggerId\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Sort <i className=\"fas fa-caret-square-down\"></i>\r\n          </button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"triggerId\">\r\n            <button\r\n              className={`dropdown-item ${\r\n                sort.by === \"name\" && sort.value === 1 ? \"sort-selected\" : \"\"\r\n              }`}\r\n              onClick={() => this.onClickSort(\"name\", 1)}\r\n            >\r\n              <i className=\"fas fa-sort-alpha-down\"></i> Name: A-Z\r\n            </button>\r\n            <button\r\n              className={`dropdown-item ${\r\n                sort.by === \"name\" && sort.value === -1 ? \"sort-selected\" : \"\"\r\n              }`}\r\n              onClick={() => this.onClickSort(\"name\", -1)}\r\n            >\r\n              <i className=\"fas fa-sort-alpha-up\"></i> Name: Z-A\r\n            </button>\r\n            <div className=\"divider\"></div>\r\n            <button\r\n              className={`dropdown-item ${\r\n                sort.by === \"status\" && sort.value === 1 ? \"sort-selected\" : \"\"\r\n              }`}\r\n              onClick={() => this.onClickSort(\"status\", 1)}\r\n            >\r\n              Status: Active\r\n            </button>\r\n            <button\r\n              className={`dropdown-item ${\r\n                sort.by === \"status\" && sort.value === -1 ? \"sort-selected\" : \"\"\r\n              }`}\r\n              onClick={() => this.onClickSort(\"status\", -1)}\r\n            >\r\n              Status: Hide\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Sort;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\nclass Control extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row mt-15\">\r\n        {/* Search */}\r\n        <Search\r\n          onSearch={this.props.onSearch}\r\n          onResetSearch={this.props.onResetSearch}\r\n        />\r\n        {/* Sort */}\r\n        <Sort onSort = {this.props.onSort}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Control;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ListItem extends Component {\r\n  onDelete = () => {\r\n    this.props.onDelete(this.props.taskItem.id); // get id taskItem\r\n  };\r\n\r\n  onUpdateStatus = () => {\r\n    this.props.onUpdateStatus(this.props.taskItem.id);\r\n  };\r\n\r\n  onEdit = () => {\r\n    this.props.onEdit(this.props.taskItem.id);\r\n  };\r\n\r\n  render() {\r\n    let { taskItem, index } = this.props;\r\n\r\n    return (\r\n      <tr>\r\n        <td className=\"text-center\">{index + 1}</td>\r\n        <td>{taskItem.name}</td>\r\n        <td className=\"text-center\">\r\n          <div\r\n            className={\r\n              taskItem.status ? \"label label-success\" : \"label label-danger\"\r\n            }\r\n            onClick={this.onUpdateStatus}\r\n          >\r\n            {taskItem.status ? \"Active\" : \"Hide\"}\r\n          </div>\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            onClick={this.onEdit}\r\n          >\r\n            <i className=\"far fa-edit\"></i> Edit\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={this.onDelete}\r\n          >\r\n            <i className=\"fas fa-trash-alt\"></i> Remove\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\nexport default ListItem;\r\n","import React, { Component } from \"react\";\r\n\r\nimport ListItem from \"./ListItem\";\r\n\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      filterName: \"\",\r\n      filterStatus: 1\r\n    };\r\n  }\r\n\r\n  onChange = (event) => {\r\n    let target = event.target;\r\n    let name = target.name;\r\n    let value = target.value;\r\n    this.props.onFilter(\r\n      name === \"filterName\" ? value : this.state.filterName,\r\n      name === \"filterStatus\" ? +value : +this.state.filterStatus\r\n    );\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { tasks } = this.props;\r\n    let elements = tasks.map((taskItem, index) => {\r\n      return (\r\n        <ListItem\r\n          key={taskItem.id}\r\n          index={index}\r\n          taskItem={taskItem}\r\n          onDelete={this.props.onDelete}\r\n          onUpdateStatus={this.props.onUpdateStatus}\r\n          onEdit={this.props.onEdit}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"row mt-15\">\r\n        <div className=\"col-12\">\r\n          <table className=\"table table-bordered table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"text-center\">Index</th>\r\n                <th className=\"text-center\">Name To Do</th>\r\n                <th className=\"text-center\">Status</th>\r\n                <th className=\"text-center\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td></td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"filterName\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"filterStatus\"\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={1}>All</option>\r\n                    <option value={0}>Active</option>\r\n                    <option value={-1}>Hide</option>\r\n                  </select>\r\n                </td>\r\n                <td></td>\r\n              </tr>\r\n              {/* List item */}\r\n              {elements}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default List;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// Components\nimport FormTask from \"./components/FormTask\";\nimport Control from \"./components/Control\";\nimport List from \"./components/List\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false, // display form\n      taskEdit: null, // Task to Edit\n      filter: {\n        // Task to Filter\n        filterName: \"\",\n        filterStatus: 1,\n      },\n      keyword: \"\", // Search\n      sort: {\n        by: \"\", // sortBy name, status\n        value: 1, // sortValue asc, desc\n      },\n    };\n  }\n\n  // set State for Component\n  componentDidMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      let tasks = JSON.parse(localStorage.getItem(\"tasks\")); // get value from localStorage\n      this.setState({ tasks });\n    }\n  }\n\n  onDisplayForm = () => {\n    if (this.state.isDisplayForm && this.state.taskEdit !== null) {\n      this.setState({\n        taskEdit: null,\n      });\n    } else {\n      this.setState({\n        isDisplayForm: !this.isDisplayForm,\n      });\n    }\n  };\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n      taskEdit: null,\n    });\n  };\n\n  onSubmit = (data) => {\n    let { tasks } = this.state;\n    if (data.id !== \"\") {\n      // Edit\n      let index = tasks.findIndex((task) => task.id === data.id);\n      tasks[index] = data;\n      this.setState({ taskEdit: null });\n    } else {\n      // Add\n      data.id = uuidv4();\n      tasks.push(data);\n    }\n    this.setState({ tasks });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  // onDelete = (id) => {\n  //   let { tasks } = this.state;\n  //   let filterTasks = tasks.filter((task) => task.id !== id);\n  //   this.setState({ tasks: filterTasks });\n  //   localStorage.setItem(\"tasks\", JSON.stringify(filterTasks));\n  //   this.onCloseForm();\n  // };\n\n  onDelete = (id) => {\n    let { tasks } = this.state;\n    tasks.splice(\n      tasks.findIndex((task) => task.id === id),\n      1\n    );\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    this.onCloseForm();\n  };\n\n  onUpdateStatus = (id) => {\n    let { tasks } = this.state;\n    let index = tasks.findIndex((task) => task.id === id);\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({ tasks });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  };\n\n  onShowEdit = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  };\n\n  onEdit = (id) => {\n    let { tasks } = this.state;\n    let index = tasks.findIndex((task) => task.id === id);\n    let taskEdit = tasks[index]; // get value Edit\n    this.setState({ taskEdit });\n    this.onShowEdit();\n  };\n\n  // Filter\n  onFilter = (filterName, filterStatus) => {\n    this.setState({\n      filter: {\n        filterName,\n        filterStatus,\n      },\n    });\n  };\n\n  onSearch = (keyword) => {\n    this.setState({ keyword });\n  };\n\n  onResetSearch = (keyword) => {\n    this.setState({ keyword });\n  };\n\n  // Sort\n  onSort = (sort) => {\n    this.setState({ sort });\n  };\n\n  render() {\n    let { tasks, isDisplayForm, taskEdit, filter, keyword, sort } = this.state;\n    // Filter Input field\n    if (filter) {\n      if (filter.filterName) {\n        tasks = tasks.filter((task) => {\n          return task.name\n            .toLowerCase()\n            .includes(filter.filterName.toLowerCase());\n        });\n      }\n      tasks = tasks.filter((task) => {\n        if (filter.filterStatus === 1) {\n          return task;\n        } else {\n          return task.status === (filter.filterStatus === 0 ? true : false);\n        }\n      });\n    }\n\n    // Search\n    if (keyword) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().includes(keyword.toLowerCase());\n      });\n    }\n\n    // Sort\n    if (sort.by === \"name\") {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) {\n          return sort.value;\n        } else if (a.name < b.name) {\n          return -sort.value;\n        } else return 0;\n      });\n    } else if (sort.by === 'status'){\n      tasks.sort((a, b) => {\n        if (a.status > b.status) {\n          return -sort.value;\n        } else if (a.status < b.status) {\n          return sort.value;\n        } else return 0;\n      });\n    }\n\n    let elementFormTask = isDisplayForm ? (\n      <FormTask\n        onCloseForm={this.onCloseForm}\n        onSubmit={this.onSubmit}\n        taskEdit={taskEdit}\n      />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"text-center\">\n          <h1>To Do List App</h1>\n        </div>\n        <hr />\n        <div className=\"row\">\n          {/* Form Task */}\n          <div className=\"col-sm-4 col-md-4\">{elementFormTask}</div>\n          <div\n            className={\n              isDisplayForm ? \"col-sm-8 col-md-8\" : \"col-sm-12 col-md-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onDisplayForm}\n            >\n              <i className=\"fas fa-plus\"></i> Add Task\n            </button>\n            &nbsp;\n            {/* Search / Sort */}\n            <Control\n              onSearch={this.onSearch}\n              onResetSearch={this.onResetSearch}\n              onSort={this.onSort}\n            />\n            {/* List */}\n            <List\n              tasks={tasks}\n              onDelete={this.onDelete}\n              onUpdateStatus={this.onUpdateStatus}\n              onEdit={this.onEdit}\n              onFilter={this.onFilter}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}